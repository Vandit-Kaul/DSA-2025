#include <iostream>
using namespace std;

class Node
{
public:
    Node *next;
    int data;

    Node(int d)
    {
        this->data = d;
        next = NULL;
    }
};

void insertdata(Node *&tail, int pos, int value)
{
    if (tail == NULL) // Empty LL
    {
        Node *newNode = new Node(value);
        newNode->next = newNode;
        tail = newNode;
        return;
    }

    Node *curr = tail->next; // Start from head
    for (int i = 1; i < pos - 1 && curr != tail; i++)
    {
        curr = curr->next;
    }

    Node *newNode = new Node(value);
    newNode->next = curr->next;
    curr->next = newNode;

    if (curr == tail)
    { // Inserting after tail
        tail = newNode;
    }
}

void printList(Node *tail)
{
    if (tail == NULL)
    {
        cout << "List is empty" << endl;
        return;
    }

    Node *temp = tail->next;
    do
    {
        cout << temp->data << " ";
        temp = temp->next;
    } while (temp != tail->next);
    cout << endl;
}

int main()
{
    Node *tail = NULL;

    insertdata(tail, 1, 5);  
    insertdata(tail, 2, 10); 
    insertdata(tail, 2, 7);  

    printList(tail); 

    return 0;
}
