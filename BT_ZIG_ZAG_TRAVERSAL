class Solution {
public:
    vector<vector<int>> zigzagLevelOrder(TreeNode* root) {
        vector<vector<int>> ans;
        queue<TreeNode*> q;

        if (root == NULL) {
            return ans;
        }

        q.push(root);
        bool leftToright = true; // flag checker

        while (!q.empty()) {
            int size = q.size();
            vector<int> nodes(size);

            for (int i = 0; i < size; i++) {
                TreeNode* front = q.front();
                q.pop();

                int index;
                if (leftToright) { // if left to right then start from the
                                   // beginning.
                    index = i;
                } else {
                    index = size - i -
                            1; // if right to left then start from the end.
                }

                nodes[index] = front->val;

                if (front->left)
                    q.push(front->left);
                if (front->right)
                    q.push(front->right);
            }

            ans.push_back(nodes);       // insert into the vector<vector<int>>
            leftToright = !leftToright; // Turn true to false or false to true
                                        // to change the direction
        }

        return ans;
    }
};
