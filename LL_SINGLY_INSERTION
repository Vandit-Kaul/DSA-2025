#include <iostream>
#include <stack>
using namespace std;

class Node
{

public:
    int data;
    Node *next;

    Node(int d)
    {
        this->data = d;
        this->next = NULL;
    }
};

void insertathead(Node *&head, int value)
{

    Node *temp = new Node(value);
    temp->next = head;
    head = temp;
}

void insertattail(Node *&head, Node *&tail, int value)
{
    Node *temp = new Node(value);

    if (head == NULL)
    {
        head = temp;
        tail = temp;
    }
    else
    {
        tail->next = temp;
        tail = temp;
    }
}

void insertatmiddle(Node *&head, int value, int pos)
{
    Node *curr = head;
    int count = 1;
    if (pos == 1 || head == NULL)
    {
        Node *temp = new Node(value);
        temp->next = head;
        head = temp;
        return;
    }

    while (count < pos - 1)
    {
        if (curr == NULL)
        {
            return;
        }
        curr = curr->next;
        count++;
    }

    Node *temp = new Node(value);
    temp->next = curr->next;
    curr->next = temp;
}

void printLL(Node *&head)
{
    Node *temp = head;
    while (temp != NULL)
    {
        cout << temp->data << "-->";
        temp = temp->next;
    }

    cout << "NULL" << endl;
}

int main()
{

    Node *node1 = new Node(5);
    Node *head = node1;
    Node *tail = node1;
    cout << node1->data << endl;
    cout << node1->next << endl;
    insertathead(head, 10);
    insertathead(head, 15);
    insertattail(head, tail, 20);
    cout << "head's data:" << head->data << endl;
    cout << "tail's data:" << tail->data << endl;
    printLL(head);
}
